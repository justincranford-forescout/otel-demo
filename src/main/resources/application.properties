# suppress inspection "SpellCheckingInspection" for whole file
spring.application.name=oteldemo
server.address=localhost
server.port=8080

##########################################################################################################################
# TELEMETRY PROPERTIES: /META-INF/spring-configuration-metadata.json (in spring-boot-actuator-autoconfigure-<version>.jar)
##########################################################################################################################

# Enable autoconfiguration of MicroMeter annotations
management.observations.annotations.enabled=true

# Actuator
management.endpoints.web.exposure.include=health,info,prometheus
management.endpoint.health.show-details=always

# Non-OTLP Prometheus metrics - org.springframework.boot.actuate.autoconfigure.metrics.export.prometheus.PrometheusProperties (since 2.0.0)
management.prometheus.metrics.export.enabled=true
management.prometheus.metrics.export.descriptions=false
management.prometheus.metrics.export.pushgateway.enabled=false

# Non-OTLP Tracing - org.springframework.boot.actuate.autoconfigure.tracing.TracingProperties (since 3.0.0)
management.tracing.enabled=true
management.tracing.sampling.probability=1.0

# OTLP tags - org.springframework.boot.actuate.autoconfigure.opentelemetry.OpenTelemetryProperties (since 3.2.0)
# Merged with attributes from env variables OTEL_RESOURCE_ATTRIBUTES and OTEL_SERVICE_NAME; properties take precedence
management.opentelemetry.resource-attributes.service.name=${spring.application.name}
management.opentelemetry.resource-attributes.service.namespace=justincranford-forescout
management.opentelemetry.resource-attributes.deployment.environment=integTest

# OTLP metrics - org.springframework.boot.actuate.autoconfigure.metrics.export.otlp.OtlpMetricsProperties (since 3.0.0)
# Spring Boot Actuator (because Micrometer) only supports HTTP export for Metrics
management.otlp.metrics.export.enabled=true
management.otlp.metrics.export.step=1m
management.otlp.metrics.export.url=http://localhost:4318/v1/metrics
#management.otlp.metrics.export.url=http://localhost:4317
management.otlp.metrics.export.connectTimeout=1s
management.otlp.metrics.export.readTimeout=3s
management.otlp.metrics.export.batchSize=10000

# OTLP traces - org.springframework.boot.actuate.autoconfigure.tracing.otlp.OtlpTracingProperties (since 3.4.0)
# Spring Boot Actuator (and Micrometer) supports HTTP or GRPC export for Traces; GRPC is more efficient
management.otlp.tracing.export.enabled=true
#management.otlp.tracing.endpoint=http://localhost:4318/v1/traces
#management.otlp.tracing.transport=HTTP
management.otlp.tracing.endpoint=http://localhost:4317
management.otlp.tracing.transport=GRPC
management.otlp.tracing.connectTimeout=3s
management.otlp.tracing.timeout=3s
management.otlp.tracing.compression=GZIP

# OTLP logs - org.springframework.boot.actuate.autoconfigure.logging.otlp.OtlpLoggingProperties (since 3.4.0)
# Spring Boot Actuator (and Micrometer) supports HTTP or GRPC export for Logs; GRPC is more efficient
management.otlp.logging.export.enabled=true
#management.otlp.logging.endpoint=http://localhost:4318/v1/logs
#management.otlp.logging.transport=HTTP
management.otlp.logging.endpoint=http://localhost:4317
management.otlp.logging.transport=GRPC
management.otlp.logging.connectTimeout=3s
management.otlp.logging.timeout=3s
management.otlp.logging.compression=GZIP
