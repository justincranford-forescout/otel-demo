receivers:
  otlp/grpcReceiverSpringBootActuator:
    protocols:
      grpc:
        endpoint: 0.0.0.0:4317
  otlp/httpReceiverSpringBootActuator:
    protocols:
      http:
        endpoint: 0.0.0.0:4318
#  prometheus/fromSpringBootActuatorPrometheus:
#    config:
#      scrape_configs:
#        - job_name: 'scrape-prometheus'
#          scrape_interval: 3s
#          static_configs:
#            - targets: ['host.docker.internal:8080']

processors:
  batch:
    timeout: 5s
    send_batch_size: 50
    send_batch_max_size: 500

exporters:
  debug:
#    verbosity: basic
    verbosity: detailed
  otlp/grpcExporterGrafanaOtelLgtm:
    endpoint: "host.docker.internal:4317" # If running in testcontainer, programmatically substitute with mapped port
    tls:
      insecure: true
  otlp/httpExporterGrafanaOtelLgtm:
    endpoint: "host.docker.internal:4318" # If running in testcontainer, programmatically substitute with mapped port
    tls:
      insecure: true
  prometheus:
    endpoint: "0.0.0.0:8888"

extensions:
  health_check: {}
  pprof:
    endpoint: 0.0.0.0:1777
  zpages:
    endpoint: 0.0.0.0:55679

service:
  pipelines:
    metrics:
      receivers: [otlp/grpcReceiverSpringBootActuator, otlp/httpReceiverSpringBootActuator]
      processors: [batch]
#      exporters: [debug, otlp/grpcExporterGrafanaOtelLgtm]
      exporters: [debug, otlp/httpExporterGrafanaOtelLgtm]
    traces:
      receivers: [otlp/grpcReceiverSpringBootActuator, otlp/httpReceiverSpringBootActuator]
      processors: [batch]
#      exporters: [debug, otlp/grpcExporterGrafanaOtelLgtm]
      exporters: [debug, otlp/httpExporterGrafanaOtelLgtm]
    logs:
      receivers: [otlp/grpcReceiverSpringBootActuator, otlp/httpReceiverSpringBootActuator]
      processors: [batch]
#      exporters: [debug, otlp/grpcExporterGrafanaOtelLgtm]
      exporters: [debug, otlp/httpExporterGrafanaOtelLgtm]
  extensions: [health_check, pprof, zpages]
