server.address=localhost
server.port=0

management.opentelemetry.resource-attributes.deployment.environment=integTest

#logging.level.root=TRACE
#logging.level.com.justincranford.oteldemo=INFO

#logging.level.io.micrometer=TRACE
#logging.level.io.opentelemetry.exporter=TRACE
#logging.level.io.micrometer.tracing.otel.bridge.Slf4JBaggageEventListener=DEBUG
#logging.level.io.micrometer.tracing.otel.bridge.Slf4JEventListener=DEBUG

# Most on-prem databases (e.g. PostgreSQL, H2) don't support emitting telemetry (i.e. OTLP telemetry), but instrumenting JPA/Hibernate/JDBC at application-side can emit spans for SQL
spring.jpa.show-sql=true

spring.jpa.properties.hibernate.format_sql=true
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
logging.level.org.hibernate.SQL=DEBUG

spring.jpa.properties.hibernate.generate_statistics=true
logging.level.org.hibernate.stat=DEBUG

# Enable OpenTelemetry instrumentation for JDBC and Hibernate
management.opentelemetry.tracing.jdbc.enabled=true
management.opentelemetry.tracing.hibernate.enabled=true
